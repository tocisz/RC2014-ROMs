# This is a basic workflow to help you get started with Actions

name: Build ROMs

# Controls when the workflow will run
on:
  push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Fetch NASCOM-BASIC release
        id: fetch_nascom
        run: |
          RELEASE_DATA=$(curl -s https://api.github.com/repos/tocisz/RC2014-NASCOM/releases/latest)
          RELEASE_ID=$(echo "$RELEASE_DATA" | jq -r '.id')
          echo "Latest release ID: $RELEASE_ID"
          echo "$RELEASE_DATA" > nascom-release.json
          ASSETS=$(jq -c '.assets[]' nascom-release.json)    
          mkdir -p nascom
          for ASSET in $ASSETS; do
            ASSET_URL=$(echo "$ASSET" | jq -r '.url')
            ASSET_NAME=$(echo "$ASSET" | jq -r '.name')
            echo "Downloading asset: $ASSET_NAME from $ASSET_URL"
            curl -L -H "Accept: application/octet-stream" "$ASSET_URL" -o "nascom/$ASSET_NAME"
          done

      - name: Fetch TC2014-FORTH release
        id: fetch_forth
        run: |
          RELEASE_DATA=$(curl -s https://api.github.com/repos/tocisz/TC2014-FORTH/releases/latest)
          RELEASE_ID=$(echo "$RELEASE_DATA" | jq -r '.id')
          echo "Latest release ID: $RELEASE_ID"
          echo "$RELEASE_DATA" > forth-release.json
          ASSETS=$(jq -c '.assets[]' forth-release.json)    
          mkdir -p forth
          for ASSET in $ASSETS; do
            ASSET_URL=$(echo "$ASSET" | jq -r '.url')
            ASSET_NAME=$(echo "$ASSET" | jq -r '.name')
            echo "Downloading asset: $ASSET_NAME from $ASSET_URL"
            curl -L -H "Accept: application/octet-stream" "$ASSET_URL" -o "forth/$ASSET_NAME"
          done

      - name: Get hex2bin
        id: hex2bin
        run: |
          RELEASE_DATA=$(curl -s https://api.github.com/repos/tocisz/hex2bin/releases/latest)
          RELEASE_ID=$(echo "$RELEASE_DATA" | jq -r '.id')
          echo "Latest release ID: $RELEASE_ID"
          echo "$RELEASE_DATA" > hex2bin-release.json
          ASSETS=$(jq -c '.assets[]' hex2bin-release.json)    
          for ASSET in $ASSETS; do
            ASSET_URL=$(echo "$ASSET" | jq -r '.url')
            ASSET_NAME=$(echo "$ASSET" | jq -r '.name')
            echo "Downloading asset: $ASSET_NAME from $ASSET_URL"
            curl -L -H "Accept: application/octet-stream" "$ASSET_URL" -o "$ASSET_NAME"
          done
          unzip hex2bin.zip

      - name: Get SCM
        id: fetch_scm
        run: |
          curl -L 'https://drive.usercontent.google.com/download?id=1-sBJwiTQTfwObihECvOzIs1ev9Xv1HbW&export=download&authuser=0' -o scm.zip
          unzip -p scm.zip SCW020_SCM100_20190124/SCMonitor/Builds/SCMonitor-v100-R1-RC2014-08k-ROM.hex > scm.hex
          Hex2bin-2.5/hex2bin scm.hex

      - name: Combine files
        run: |
          dd bs=1024 count=32        if=/dev/zero | LC_ALL=C tr '\000' '\377' > NF000009.bin
          dd bs=1024 count=8         if=nascom/rom.bin conv=notrunc of=NF000009.bin
          dd bs=1024 count=8 seek=8  if=forth/rom.bin  conv=notrunc of=NF000009.bin
          dd bs=1024 count=8 seek=56 if=scm.bin        conv=notrunc of=NF000009.bin

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            NF000009.bin
